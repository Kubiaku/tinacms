// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};



export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Int'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getThemeDocument: ThemeDocument;
  getThemeList: ThemeConnection;
  getPageDocument: PageDocument;
  getPageList: PageConnection;
};


export type QueryGetCollectionArgs = {
  collection?: Maybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: Maybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};


export type QueryGetThemeDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetThemeListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};


export type QueryGetPageDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetPageListArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label: Scalars['String'];
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: Maybe<Scalars['String']>;
  after?: Maybe<Scalars['String']>;
  first?: Maybe<Scalars['Int']>;
  last?: Maybe<Scalars['Int']>;
};

export type DocumentNode = ThemeDocument | PageDocument;

export type Theme = {
  __typename?: 'Theme';
  color?: Maybe<Scalars['String']>;
  btnStyle?: Maybe<Scalars['String']>;
};

export type ThemeDocument = Node & Document & {
  __typename?: 'ThemeDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Theme;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type ThemeConnectionEdges = {
  __typename?: 'ThemeConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<ThemeDocument>;
};

export type ThemeConnection = Connection & {
  __typename?: 'ThemeConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<ThemeConnectionEdges>>>;
};

export type PageNavWordmarkIcon = {
  __typename?: 'PageNavWordmarkIcon';
  color?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
};

export type PageNavWordmark = {
  __typename?: 'PageNavWordmark';
  icon?: Maybe<PageNavWordmarkIcon>;
  name?: Maybe<Scalars['String']>;
};

export type PageNavItems = {
  __typename?: 'PageNavItems';
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type PageNav = {
  __typename?: 'PageNav';
  wordmark?: Maybe<PageNavWordmark>;
  items?: Maybe<Array<Maybe<PageNavItems>>>;
};

export type PageBlocksHeroString = {
  __typename?: 'PageBlocksHeroString';
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroImage = {
  __typename?: 'PageBlocksHeroImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroActions = {
  __typename?: 'PageBlocksHeroActions';
  label?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksHeroStyle = {
  __typename?: 'PageBlocksHeroStyle';
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  tagline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  paragraph?: Maybe<Scalars['String']>;
  string?: Maybe<PageBlocksHeroString>;
  image?: Maybe<PageBlocksHeroImage>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;
  style?: Maybe<PageBlocksHeroStyle>;
};

export type PageBlocksTestimonialStyle = {
  __typename?: 'PageBlocksTestimonialStyle';
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksTestimonial = {
  __typename?: 'PageBlocksTestimonial';
  quote?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  style?: Maybe<PageBlocksTestimonialStyle>;
};

export type PageBlocksFeaturesItemsIcon = {
  __typename?: 'PageBlocksFeaturesItemsIcon';
  color?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsActions = {
  __typename?: 'PageBlocksFeaturesItemsActions';
  label?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItems = {
  __typename?: 'PageBlocksFeaturesItems';
  icon?: Maybe<PageBlocksFeaturesItemsIcon>;
  title?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFeaturesItemsActions>>>;
};

export type PageBlocksFeaturesStyle = {
  __typename?: 'PageBlocksFeaturesStyle';
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatures = {
  __typename?: 'PageBlocksFeatures';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;
  style?: Maybe<PageBlocksFeaturesStyle>;
};

export type PageBlocks = PageBlocksHero | PageBlocksTestimonial | PageBlocksFeatures;

export type PageNavlistNavItems = {
  __typename?: 'PageNavlistNavItems';
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type PageNavlistNav = {
  __typename?: 'PageNavlistNav';
  title?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<PageNavlistNavItems>>>;
};

export type PageNavlist = PageNavlistNav;

export type PageFooterSocial = {
  __typename?: 'PageFooterSocial';
  facebook?: Maybe<Scalars['String']>;
  twitter?: Maybe<Scalars['String']>;
  instagram?: Maybe<Scalars['String']>;
  github?: Maybe<Scalars['String']>;
};

export type PageFooter = {
  __typename?: 'PageFooter';
  social?: Maybe<PageFooterSocial>;
};

export type Page = {
  __typename?: 'Page';
  nav?: Maybe<PageNav>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  navlist?: Maybe<Array<Maybe<PageNavlist>>>;
  footer?: Maybe<PageFooter>;
};

export type PageDocument = Node & Document & {
  __typename?: 'PageDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Page;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<PageDocument>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  updateThemeDocument: ThemeDocument;
  updatePageDocument: PageDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: Maybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateThemeDocumentArgs = {
  relativePath: Scalars['String'];
  params: ThemeMutation;
};


export type MutationUpdatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};

export type DocumentMutation = {
  theme?: Maybe<ThemeMutation>;
  page?: Maybe<PageMutation>;
};

export type ThemeMutation = {
  color?: Maybe<Scalars['String']>;
  btnStyle?: Maybe<Scalars['String']>;
};

export type PageNavWordmarkIconMutation = {
  color?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
};

export type PageNavWordmarkMutation = {
  icon?: Maybe<PageNavWordmarkIconMutation>;
  name?: Maybe<Scalars['String']>;
};

export type PageNavItemsMutation = {
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type PageNavMutation = {
  wordmark?: Maybe<PageNavWordmarkMutation>;
  items?: Maybe<Array<Maybe<PageNavItemsMutation>>>;
};

export type PageBlocksHeroStringMutation = {
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroImageMutation = {
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroActionsMutation = {
  label?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksHeroStyleMutation = {
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroMutation = {
  tagline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  paragraph?: Maybe<Scalars['String']>;
  string?: Maybe<PageBlocksHeroStringMutation>;
  image?: Maybe<PageBlocksHeroImageMutation>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActionsMutation>>>;
  style?: Maybe<PageBlocksHeroStyleMutation>;
};

export type PageBlocksTestimonialStyleMutation = {
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksTestimonialMutation = {
  quote?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  style?: Maybe<PageBlocksTestimonialStyleMutation>;
};

export type PageBlocksFeaturesItemsIconMutation = {
  color?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsActionsMutation = {
  label?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsMutation = {
  icon?: Maybe<PageBlocksFeaturesItemsIconMutation>;
  title?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFeaturesItemsActionsMutation>>>;
};

export type PageBlocksFeaturesStyleMutation = {
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesMutation = {
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItemsMutation>>>;
  style?: Maybe<PageBlocksFeaturesStyleMutation>;
};

export type PageBlocksMutation = {
  hero?: Maybe<PageBlocksHeroMutation>;
  testimonial?: Maybe<PageBlocksTestimonialMutation>;
  features?: Maybe<PageBlocksFeaturesMutation>;
};

export type PageNavlistNavItemsMutation = {
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type PageNavlistNavMutation = {
  title?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<PageNavlistNavItemsMutation>>>;
};

export type PageNavlistMutation = {
  nav?: Maybe<PageNavlistNavMutation>;
};

export type PageFooterSocialMutation = {
  facebook?: Maybe<Scalars['String']>;
  twitter?: Maybe<Scalars['String']>;
  instagram?: Maybe<Scalars['String']>;
  github?: Maybe<Scalars['String']>;
};

export type PageFooterMutation = {
  social?: Maybe<PageFooterSocialMutation>;
};

export type PageMutation = {
  nav?: Maybe<PageNavMutation>;
  blocks?: Maybe<Array<Maybe<PageBlocksMutation>>>;
  navlist?: Maybe<Array<Maybe<PageNavlistMutation>>>;
  footer?: Maybe<PageFooterMutation>;
};

