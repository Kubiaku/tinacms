{"ast":null,"code":"import _defineProperty from \"/Users/jeffsee/code/tinacms/.yarn/cache/@babel-runtime-npm-7.12.5-b3edb8ee8e-423fb00793.zip/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jeffsee/code/tinacms/.yarn/cache/@babel-runtime-npm-7.12.5-b3edb8ee8e-423fb00793.zip/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/Users/jeffsee/code/tinacms/.yarn/cache/@babel-runtime-npm-7.12.5-b3edb8ee8e-423fb00793.zip/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/jeffsee/code/tinacms/examples/tina-cloud-starter-experimental/components/tina-wrapper.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\nCopyright 2021 Forestry.io Holdings, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { TinaCloudProvider, unstable_useGraphQLForms } from 'tinacms';\nimport React from 'react';\nimport { LoadingPage } from './Spinner';\n/**\n * This gets loaded dynamically in \"pages/_app.js\"\n * if you're on a route that starts with \"/admin\"\n */\n\nvar TinaWrapper = function TinaWrapper(props) {\n  return __jsx(TinaCloudProvider, {\n    clientId: \"\",\n    branch: \"main\",\n    isLocalClient: true,\n    organization: \"\" // clientId={process.env.NEXT_PUBLIC_TINA_CLIENT_ID}\n    // branch=\"main\"\n    // isLocalClient={Boolean(Number(process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT))}\n    // organization={process.env.NEXT_PUBLIC_ORGANIZATION_NAME}\n    // mediaStore={TinaCloudCloudinaryMediaStore}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Inner, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c = TinaWrapper;\n\nvar Inner = function Inner(props) {\n  var _unstable_useGraphQLF = unstable_useGraphQLForms({\n    query: function query(gql) {\n      return gql(props.query);\n    },\n    variables: props.variables || {}\n  }),\n      _unstable_useGraphQLF2 = _slicedToArray(_unstable_useGraphQLF, 2),\n      payload = _unstable_useGraphQLF2[0],\n      isLoading = _unstable_useGraphQLF2[1];\n\n  return __jsx(React.Fragment, null, isLoading ? __jsx(LoadingPage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, props.children(props)) : // pass the new edit state data to the child\n  props.children(_objectSpread(_objectSpread({}, props), {}, {\n    data: payload\n  })));\n};\n\n_c2 = Inner;\nexport default TinaWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TinaWrapper\");\n$RefreshReg$(_c2, \"Inner\");","map":{"version":3,"sources":["/Users/jeffsee/code/tinacms/examples/tina-cloud-starter-experimental/components/tina-wrapper.tsx"],"names":["TinaCloudProvider","unstable_useGraphQLForms","React","LoadingPage","TinaWrapper","props","Inner","query","gql","variables","payload","isLoading","children","data"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,EAA4BC,wBAA5B,QAA4D,SAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA;AACA;AACA;AACA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,SACE,MAAC,iBAAD;AACE,IAAA,QAAQ,EAAC,EADX;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,aAAa,EAAE,IAHjB;AAIE,IAAA,YAAY,EAAC,EAJf,CAKE;AACA;AACA;AACA;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,KAAD,eAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,CADF;AAeD,CAhBD;;KAAMD,W;;AAkBN,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAAD,KAAK,EAAI;AAAA,8BACQJ,wBAAwB,CAAC;AACpDM,IAAAA,KAAK,EAAE,eAAAC,GAAG;AAAA,aAAIA,GAAG,CAACH,KAAK,CAACE,KAAP,CAAP;AAAA,KAD0C;AAEpDE,IAAAA,SAAS,EAAEJ,KAAK,CAACI,SAAN,IAAmB;AAFsB,GAAD,CADhC;AAAA;AAAA,MACdC,OADc;AAAA,MACLC,SADK;;AAKrB,SACE,4BACGA,SAAS,GACR,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcN,KAAK,CAACO,QAAN,CAAeP,KAAf,CAAd,CADQ,GAGR;AACAA,EAAAA,KAAK,CAACO,QAAN,iCAAoBP,KAApB;AAA2BQ,IAAAA,IAAI,EAAEH;AAAjC,KALJ,CADF;AAUD,CAfD;;MAAMJ,K;AAiBN,eAAeF,WAAf","sourcesContent":["/**\nCopyright 2021 Forestry.io Holdings, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { TinaCloudProvider, unstable_useGraphQLForms } from 'tinacms'\nimport React from 'react'\nimport { LoadingPage } from './Spinner'\n\n/**\n * This gets loaded dynamically in \"pages/_app.js\"\n * if you're on a route that starts with \"/admin\"\n */\nconst TinaWrapper = props => {\n  return (\n    <TinaCloudProvider\n      clientId=\"\"\n      branch=\"main\"\n      isLocalClient={true}\n      organization=\"\"\n      // clientId={process.env.NEXT_PUBLIC_TINA_CLIENT_ID}\n      // branch=\"main\"\n      // isLocalClient={Boolean(Number(process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT))}\n      // organization={process.env.NEXT_PUBLIC_ORGANIZATION_NAME}\n      // mediaStore={TinaCloudCloudinaryMediaStore}\n    >\n      <Inner {...props} />\n    </TinaCloudProvider>\n  )\n}\n\nconst Inner = props => {\n  const [payload, isLoading] = unstable_useGraphQLForms({\n    query: gql => gql(props.query),\n    variables: props.variables || {},\n  })\n  return (\n    <>\n      {isLoading ? (\n        <LoadingPage>{props.children(props)}</LoadingPage>\n      ) : (\n        // pass the new edit state data to the child\n        props.children({ ...props, data: payload })\n      )}\n    </>\n  )\n}\n\nexport default TinaWrapper\n"]},"metadata":{},"sourceType":"module"}