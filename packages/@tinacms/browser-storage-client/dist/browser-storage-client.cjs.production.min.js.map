{"version":3,"file":"browser-storage-client.cjs.production.min.js","sources":["../src/flatten-form-data.ts","../src/BrowserStorageApi.ts","../src/useLocalStorageCache.ts"],"sourcesContent":["/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport get from 'lodash.get'\n\nexport function flattenFormData(form: any) {\n  let flatData: any = {}\n  let values = form.getState().values\n  form.getRegisteredFields().forEach((field: string | number) => {\n    let data = get(values, field)\n    if (typeof data === 'object') return\n    flatData[field] = data\n  })\n  return flatData\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nexport class BrowserStorageApi {\n  data: any = {}\n  timeout: number | null = null\n  namespace: string\n  storage: Storage // should work with window.localStorage or window.sessionStorage\n\n  constructor(storage: Storage, namespace: string | null = null) {\n    if (!namespace) {\n      this.namespace = `tina-local-storage:${window.location.hostname}`\n    } else {\n      this.namespace = namespace\n    }\n    this.storage = storage\n    const persistedData = this.storage.getItem(this.namespace)\n    if (persistedData) {\n      this.data = JSON.parse(persistedData)\n    }\n  }\n\n  save(id: string, content: any) {\n    this.data[id] = content\n    this.debouncePersist()\n  }\n\n  load(id: string) {\n    return this.data[id]\n  }\n\n  clear(id: string) {\n    delete this.data[id]\n    this.debouncePersist()\n  }\n\n  private debouncePersist() {\n    this.timeout && clearTimeout(this.timeout)\n    //@ts-ignore\n    this.timeout = setTimeout(this.persist.bind(this), 1000)\n  }\n\n  private persist() {\n    this.storage.setItem(this.namespace, JSON.stringify(this.data))\n  }\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport { Form, useCMS, useWatchFormValues } from 'tinacms'\nimport { useCallback, useEffect } from 'react'\nimport { flattenFormData } from './flatten-form-data'\n\n// persist pending changes to localStorage,\n// and load from localstorage on boot\nexport const useLocalStorageCache = (\n  path: string,\n  form: Form<any>,\n  editMode: boolean\n) => {\n  const cms = useCMS()\n\n  const saveToStorage = useCallback(\n    _formData => {\n      cms.api.storage.save(path, flattenFormData(form.finalForm))\n    },\n    [path]\n  )\n\n  // save to storage on change\n  useWatchFormValues(form, saveToStorage)\n\n  // load from storage on boot\n  useEffect(() => {\n    if (!editMode) return\n\n    const values = cms.api.storage.load(path)\n    if (values) {\n      form.updateValues(values)\n    }\n  }, [form, editMode])\n}\n"],"names":["flattenFormData","form","flatData","values","getState","getRegisteredFields","forEach","field","data","get","storage","namespace","window","location","hostname","persistedData","this","getItem","JSON","parse","save","id","content","debouncePersist","load","clear","timeout","clearTimeout","setTimeout","persist","bind","setItem","stringify","path","editMode","cms","useCMS","saveToStorage","useCallback","_formData","api","finalForm","useWatchFormValues","useEffect","updateValues"],"mappings":"sMAoBgBA,EAAgBC,OAC1BC,EAAgB,GAChBC,EAASF,EAAKG,WAAWD,cAC7BF,EAAKI,sBAAsBC,SAAQ,SAACC,OAC9BC,EAAOC,EAAIN,EAAQI,GACH,iBAATC,IACXN,EAASK,GAASC,MAEbN,4BCVT,sBAMcQ,EAAkBC,YAAAA,IAAAA,EAA2B,gBAL7C,gBACa,UAQhBA,UAHFA,yBACoCC,OAAOC,SAASC,cAIpDJ,QAAUA,MACTK,EAAgBC,KAAKN,QAAQO,QAAQD,KAAKL,WAC5CI,SACGP,KAAOU,KAAKC,MAAMJ,+BAI3BK,KAAA,SAAKC,EAAYC,QACVd,KAAKa,GAAMC,OACXC,qBAGPC,KAAA,SAAKH,UACIL,KAAKR,KAAKa,MAGnBI,MAAA,SAAMJ,UACGL,KAAKR,KAAKa,QACZE,qBAGCA,gBAAA,gBACDG,SAAWC,aAAaX,KAAKU,cAE7BA,QAAUE,WAAWZ,KAAKa,QAAQC,KAAKd,MAAO,QAG7Ca,QAAA,gBACDnB,QAAQqB,QAAQf,KAAKL,UAAWO,KAAKc,UAAUhB,KAAKR,UAxC7D,0DCMoC,SAClCyB,EACAhC,EACAiC,OAEMC,EAAMC,WAENC,EAAgBC,eACpB,SAAAC,GACEJ,EAAIK,IAAI9B,QAAQU,KAAKa,EAAMjC,EAAgBC,EAAKwC,cAElD,CAACR,IAIHS,qBAAmBzC,EAAMoC,GAGzBM,aAAU,cACHT,OAEC/B,EAASgC,EAAIK,IAAI9B,QAAQc,KAAKS,GAChC9B,GACFF,EAAK2C,aAAazC,MAEnB,CAACF,EAAMiC"}