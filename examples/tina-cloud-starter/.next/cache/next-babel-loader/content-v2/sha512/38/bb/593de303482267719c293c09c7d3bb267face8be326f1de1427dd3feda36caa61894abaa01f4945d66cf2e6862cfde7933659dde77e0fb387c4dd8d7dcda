{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/components/icon.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { BiCodeBlock, BiLike, BiMapAlt, BiPalette, BiPieChartAlt2, BiPin, BiShield, BiSlider, BiStore, BiTennisBall, BiTestTube, BiTrophy, BiUserCircle, BiBeer, BiChat, BiCloud, BiCoffeeTogo, BiWorld } from \"react-icons/bi\";\nimport { ImTrophy } from \"react-icons/im\";\nimport { HiAdjustments, HiBeaker, HiChartBar, HiChatAlt2, HiCloud, HiColorSwatch, HiLocationMarker, HiMap, HiShieldCheck, HiShoppingCart, HiTerminal, HiThumbUp, HiUser } from \"react-icons/hi\";\nimport { FiAperture } from \"react-icons/fi\";\nimport { ThemeContext } from \"./theme\";\nimport { FaBeer, FaCoffee } from \"react-icons/fa\"; // @ts-ignore\n\nimport TinaIconSvg from \"../public/tina.svg\";\nvar biIconOptions = {\n  code: BiCodeBlock,\n  like: BiLike,\n  map: BiMapAlt,\n  palette: BiPalette,\n  chart: BiPieChartAlt2,\n  pin: BiPin,\n  shield: BiShield,\n  settings: BiSlider,\n  store: BiStore,\n  ball: BiTennisBall,\n  tube: BiTestTube,\n  trophy: BiTrophy,\n  user: BiUserCircle,\n  beer: BiBeer,\n  chat: BiChat,\n  cloud: BiCloud,\n  coffee: BiCoffeeTogo,\n  world: BiWorld,\n  aperture: FiAperture,\n  tina: TinaIconSvg\n};\nvar heroIconOptions = {\n  code: HiTerminal,\n  like: HiThumbUp,\n  map: HiMap,\n  palette: HiColorSwatch,\n  chart: HiChartBar,\n  pin: HiLocationMarker,\n  shield: HiShieldCheck,\n  settings: HiAdjustments,\n  store: HiShoppingCart,\n  ball: BiTennisBall,\n  tube: HiBeaker,\n  trophy: ImTrophy,\n  user: HiUser,\n  beer: FaBeer,\n  chat: HiChatAlt2,\n  cloud: HiCloud,\n  coffee: FaCoffee,\n  world: BiWorld,\n  aperture: FiAperture,\n  tina: TinaIconSvg\n};\nexport var Icon = function Icon(_ref) {\n  _s();\n\n  var data = _ref.data,\n      _ref$parentColor = _ref.parentColor,\n      parentColor = _ref$parentColor === void 0 ? \"\" : _ref$parentColor,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      _ref$tinaField = _ref.tinaField,\n      tinaField = _ref$tinaField === void 0 ? \"\" : _ref$tinaField;\n  var theme = React.useContext(ThemeContext);\n  var IconSVG = React.useMemo(function () {\n    var iconOptions = theme.icon === \"boxicon\" ? biIconOptions : heroIconOptions;\n\n    if (!data.name || data.name === \"\" || !iconOptions[data.name]) {\n      return randomProperty(iconOptions);\n    } else {\n      return iconOptions[data.name];\n    }\n  }, [data.name, theme.icon]);\n  var iconSize = data.size ? data.size : \"large\";\n  /* Full class strings are required for Tailwind's just-in-time mode,\n     I would love a better solution that doesn't require so much repetition */\n\n  var iconCircleColorClass = {\n    blue: \"bg-blue-400 dark:bg-blue-500 text-blue-50\",\n    teal: \"bg-teal-400 dark:bg-teal-500 text-teal-50\",\n    green: \"bg-green-400 dark:bg-green-500 text-green-50\",\n    red: \"bg-red-400 dark:bg-red-500 text-red-50\",\n    pink: \"bg-pink-400 dark:bg-pink-500 text-pink-50\",\n    purple: \"bg-purple-400 dark:bg-purple-500 text-purple-50\",\n    orange: \"bg-orange-400 dark:bg-orange-500 text-orange-50\",\n    yellow: \"bg-yellow-400 dark:bg-yellow-500 text-yellow-50\"\n  };\n  var iconColorClass = {\n    blue: \"text-blue-400\",\n    teal: \"text-teal-400\",\n    green: \"text-green-400\",\n    red: \"text-red-400\",\n    pink: \"text-pink-400\",\n    purple: \"text-purple-400\",\n    orange: \"text-orange-400\",\n    yellow: \"text-yellow-400\",\n    white: \"text-white opacity-80\"\n  };\n  var iconColor = data.color ? data.color === \"primary\" ? theme.color : data.color : theme.color;\n  var iconColorClasses = iconColorClass[parentColor === \"primary\" && (iconColor === theme.color || iconColor === \"primary\") ? \"white\" : iconColor];\n  var iconSizeClass = {\n    small: \"w-8 h-8\",\n    medium: \"w-12 h-12\",\n    large: \"w-14 h-14\",\n    custom: \"\"\n  };\n  var Component = React.useMemo(function () {\n    if (!IconSVG) return null;\n\n    if (data.style == \"circle\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-tinafield\": tinaField,\n        className: \"relative z-10 inline-flex items-center justify-center flex-shrink-0 \".concat(iconSizeClass[iconSize], \" rounded-full \").concat(iconCircleColorClass[iconColor], \" \").concat(className),\n        children: /*#__PURE__*/_jsxDEV(IconSVG, {\n          className: \"w-2/3 h-2/3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, _this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(IconSVG, {\n        \"data-tinafield\": tinaField,\n        className: \"\".concat(iconSizeClass[iconSize], \" \").concat(iconColorClasses, \" \").concat(className)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, _this);\n    }\n  }, [parentColor, data.style, data.size, data.color, data.name, IconSVG, iconColor]);\n  return Component;\n};\n\n_s(Icon, \"oX8E+uShBTlde02e4yipXph13j8=\");\n\n_c = Icon;\n\nvar randomProperty = function randomProperty(obj) {\n  var keys = Object.keys(obj);\n  return obj[keys[keys.length * Math.random() << 0]];\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Icon\");","map":{"version":3,"sources":["/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/components/icon.tsx"],"names":["React","BiCodeBlock","BiLike","BiMapAlt","BiPalette","BiPieChartAlt2","BiPin","BiShield","BiSlider","BiStore","BiTennisBall","BiTestTube","BiTrophy","BiUserCircle","BiBeer","BiChat","BiCloud","BiCoffeeTogo","BiWorld","ImTrophy","HiAdjustments","HiBeaker","HiChartBar","HiChatAlt2","HiCloud","HiColorSwatch","HiLocationMarker","HiMap","HiShieldCheck","HiShoppingCart","HiTerminal","HiThumbUp","HiUser","FiAperture","ThemeContext","FaBeer","FaCoffee","TinaIconSvg","biIconOptions","code","like","map","palette","chart","pin","shield","settings","store","ball","tube","trophy","user","beer","chat","cloud","coffee","world","aperture","tina","heroIconOptions","Icon","data","parentColor","className","tinaField","theme","useContext","IconSVG","useMemo","iconOptions","icon","name","randomProperty","iconSize","size","iconCircleColorClass","blue","teal","green","red","pink","purple","orange","yellow","iconColorClass","white","iconColor","color","iconColorClasses","iconSizeClass","small","medium","large","custom","Component","style","obj","keys","Object","length","Math","random"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  BiCodeBlock,\n  BiLike,\n  BiMapAlt,\n  BiPalette,\n  BiPieChartAlt2,\n  BiPin,\n  BiShield,\n  BiSlider,\n  BiStore,\n  BiTennisBall,\n  BiTestTube,\n  BiTrophy,\n  BiUserCircle,\n  BiBeer,\n  BiChat,\n  BiCloud,\n  BiCoffeeTogo,\n  BiWorld,\n} from \"react-icons/bi\";\nimport { ImTrophy } from \"react-icons/im\";\nimport {\n  HiAdjustments,\n  HiBeaker,\n  HiChartBar,\n  HiChatAlt2,\n  HiCloud,\n  HiColorSwatch,\n  HiLocationMarker,\n  HiMap,\n  HiShieldCheck,\n  HiShoppingCart,\n  HiTerminal,\n  HiThumbUp,\n  HiUser,\n} from \"react-icons/hi\";\nimport { FiAperture } from \"react-icons/fi\";\nimport { Theme, ThemeContext } from \"./theme\";\nimport { FaBeer, FaCoffee, FaPalette } from \"react-icons/fa\";\n// @ts-ignore\nimport TinaIconSvg from \"../public/tina.svg\";\n\nconst biIconOptions = {\n  code: BiCodeBlock,\n  like: BiLike,\n  map: BiMapAlt,\n  palette: BiPalette,\n  chart: BiPieChartAlt2,\n  pin: BiPin,\n  shield: BiShield,\n  settings: BiSlider,\n  store: BiStore,\n  ball: BiTennisBall,\n  tube: BiTestTube,\n  trophy: BiTrophy,\n  user: BiUserCircle,\n  beer: BiBeer,\n  chat: BiChat,\n  cloud: BiCloud,\n  coffee: BiCoffeeTogo,\n  world: BiWorld,\n  aperture: FiAperture,\n  tina: TinaIconSvg,\n};\n\nconst heroIconOptions = {\n  code: HiTerminal,\n  like: HiThumbUp,\n  map: HiMap,\n  palette: HiColorSwatch,\n  chart: HiChartBar,\n  pin: HiLocationMarker,\n  shield: HiShieldCheck,\n  settings: HiAdjustments,\n  store: HiShoppingCart,\n  ball: BiTennisBall,\n  tube: HiBeaker,\n  trophy: ImTrophy,\n  user: HiUser,\n  beer: FaBeer,\n  chat: HiChatAlt2,\n  cloud: HiCloud,\n  coffee: FaCoffee,\n  world: BiWorld,\n  aperture: FiAperture,\n  tina: TinaIconSvg,\n};\n\nexport const Icon = ({\n  data,\n  parentColor = \"\",\n  className = \"\",\n  tinaField = \"\",\n}) => {\n  const theme = React.useContext(ThemeContext);\n  const IconSVG = React.useMemo(() => {\n    const iconOptions =\n      theme.icon === \"boxicon\" ? biIconOptions : heroIconOptions;\n    if (!data.name || data.name === \"\" || !iconOptions[data.name]) {\n      return randomProperty(iconOptions);\n    } else {\n      return iconOptions[data.name];\n    }\n  }, [data.name, theme.icon]);\n\n  const iconSize = data.size ? data.size : \"large\";\n\n  /* Full class strings are required for Tailwind's just-in-time mode,\n     I would love a better solution that doesn't require so much repetition */\n\n  const iconCircleColorClass = {\n    blue: \"bg-blue-400 dark:bg-blue-500 text-blue-50\",\n    teal: \"bg-teal-400 dark:bg-teal-500 text-teal-50\",\n    green: \"bg-green-400 dark:bg-green-500 text-green-50\",\n    red: \"bg-red-400 dark:bg-red-500 text-red-50\",\n    pink: \"bg-pink-400 dark:bg-pink-500 text-pink-50\",\n    purple: \"bg-purple-400 dark:bg-purple-500 text-purple-50\",\n    orange: \"bg-orange-400 dark:bg-orange-500 text-orange-50\",\n    yellow: \"bg-yellow-400 dark:bg-yellow-500 text-yellow-50\",\n  };\n\n  const iconColorClass = {\n    blue: \"text-blue-400\",\n    teal: \"text-teal-400\",\n    green: \"text-green-400\",\n    red: \"text-red-400\",\n    pink: \"text-pink-400\",\n    purple: \"text-purple-400\",\n    orange: \"text-orange-400\",\n    yellow: \"text-yellow-400\",\n    white: \"text-white opacity-80\",\n  };\n\n  const iconColor = data.color\n    ? data.color === \"primary\"\n      ? theme.color\n      : data.color\n    : theme.color;\n\n  const iconColorClasses =\n    iconColorClass[\n      parentColor === \"primary\" &&\n      (iconColor === theme.color || iconColor === \"primary\")\n        ? \"white\"\n        : iconColor\n    ];\n\n  const iconSizeClass = {\n    small: \"w-8 h-8\",\n    medium: \"w-12 h-12\",\n    large: \"w-14 h-14\",\n    custom: \"\",\n  };\n\n  const Component = React.useMemo(() => {\n    if (!IconSVG) return null;\n    if (data.style == \"circle\") {\n      return (\n        <div\n          data-tinafield={tinaField}\n          className={`relative z-10 inline-flex items-center justify-center flex-shrink-0 ${iconSizeClass[iconSize]} rounded-full ${iconCircleColorClass[iconColor]} ${className}`}\n        >\n          <IconSVG className=\"w-2/3 h-2/3\" />\n        </div>\n      );\n    } else {\n      return (\n        <IconSVG\n          data-tinafield={tinaField}\n          className={`${iconSizeClass[iconSize]} ${iconColorClasses} ${className}`}\n        />\n      );\n    }\n  }, [\n    parentColor,\n    data.style,\n    data.size,\n    data.color,\n    data.name,\n    IconSVG,\n    iconColor,\n  ]);\n\n  return Component;\n};\n\nconst randomProperty = (obj) => {\n  let keys = Object.keys(obj);\n  return obj[keys[(keys.length * Math.random()) << 0]];\n};\n"]},"metadata":{},"sourceType":"module"}