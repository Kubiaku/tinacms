{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/components/actions.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from \"next/link\";\nimport * as React from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport { ThemeContext } from \"./theme\";\nexport var Actions = function Actions(_ref) {\n  _s();\n\n  var _ref$parentColor = _ref.parentColor,\n      parentColor = _ref$parentColor === void 0 ? \"default\" : _ref$parentColor,\n      _ref$parentField = _ref.parentField,\n      parentField = _ref$parentField === void 0 ? \"\" : _ref$parentField,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      actions = _ref.actions;\n  var theme = React.useContext(ThemeContext);\n  var buttonColorClasses = {\n    blue: \"text-white bg-blue-500 hover:bg-blue-600 bg-gradient-to-r from-blue-400 to-blue-600 hover:from-blue-400 hover:to-blue-500\",\n    teal: \"text-white bg-teal-500 hover:bg-teal-600 bg-gradient-to-r from-teal-400 to-teal-600 hover:from-teal-400 hover:to-teal-500\",\n    green: \"text-white bg-green-500 hover:bg-green-600 bg-gradient-to-r from-green-400 to-green-600 hover:from-green-400 hover:to-green-500\",\n    red: \"text-white bg-red-500 hover:bg-red-600 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-400 hover:to-red-500\",\n    pink: \"text-white bg-pink-500 hover:bg-pink-600 bg-gradient-to-r from-pink-400 to-pink-600 hover:from-pink-400 hover:to-pink-500\",\n    purple: \"text-white bg-purple-500 hover:bg-purple-600 bg-gradient-to-r from-purple-400 to-purple-600 hover:from-purple-400 hover:to-purple-500\",\n    orange: \"text-white bg-orange-500 hover:bg-orange-600 bg-gradient-to-r from-orange-400 to-orange-600 hover:from-orange-400 hover:to-orange-500\",\n    yellow: \"text-gray-800 bg-yellow-500 hover:bg-yellow-600 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-400 hover:to-yellow-500\"\n  };\n  var invertedButtonColorClasses = {\n    blue: \"text-blue-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    teal: \"text-teal-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    green: \"text-green-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    red: \"text-red-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    pink: \"text-pink-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    purple: \"text-purple-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    orange: \"text-orange-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    yellow: \"text-yellow-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\"\n  };\n  var linkButtonColorClasses = {\n    blue: \"text-blue-600 dark:text-blue-400 hover:text-blue-400 dark:hover:text-blue-200\",\n    teal: \"ttext-teal-600 dark:text-teal-400 hover:text-teal-400 dark:hover:text-teal-200\",\n    green: \"text-green-600 dark:text-green-400 hover:text-green-400 dark:hover:text-green-200\",\n    red: \"text-red-600 dark:text-red-400 hover:text-red-400 dark:hover:text-red-200\",\n    pink: \"text-pink-600 dark:text-pink-400 hover:text-pink-400 dark:hover:text-pink-200\",\n    purple: \"text-purple-600 dark:text-purple-400 hover:text-purple-400 dark:hover:text-purple-200\",\n    orange: \"text-orange-600 dark:text-orange-400 hover:text-orange-400 dark:hover:text-orange-200\",\n    yellow: \"text-yellow-600 dark:text-yellow-400 hover:text-yellow-400 dark:hover:text-yellow-200\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap items-center gap-y-4 gap-x-6 \".concat(className),\n    children: actions && actions.map(function (action, index) {\n      var element = null;\n\n      if (action.type === \"button\") {\n        element = /*#__PURE__*/_jsxDEV(Link, {\n          href: action.link ? action.link : \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-tinafield\": \"\".concat(parentField, \".\").concat(index),\n            className: \"z-10 relative flex items-center px-7 py-3 font-semibold text-lg transition duration-150 ease-out  rounded transform focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 whitespace-nowrap \".concat(parentColor === \"primary\" ? invertedButtonColorClasses[theme.color] : buttonColorClasses[theme.color]),\n            children: [action.label, action.icon && /*#__PURE__*/_jsxDEV(BiRightArrowAlt, {\n              className: \"ml-1 -mr-1 w-6 h-6 opacity-80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this);\n      }\n\n      if (action.type === \"link\" || action.type === \"linkExternal\") {\n        element = /*#__PURE__*/_jsxDEV(Link, {\n          href: action.link ? action.link : \"/\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            \"data-tinafield\": \"\".concat(parentField, \".\").concat(index),\n            className: \"group inline-flex items-center font-semibold text-lg transition duration-150 ease-out \".concat(parentColor === \"primary\" ? \"text-white  hover:text-gray-50\" : linkButtonColorClasses[theme.color]),\n            style: {\n              textShadow: \"0 3px 7px rgba(var(--color-rgb-blue-400),0.2)\"\n            },\n            children: [action.label, action.icon && /*#__PURE__*/_jsxDEV(BiRightArrowAlt, {\n              className: \"ml-0 mr-0 w-6 h-6 opacity-80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this);\n      }\n\n      return element;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Actions, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c = Actions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"sources":["/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/components/actions.tsx"],"names":["Link","React","BiRightArrowAlt","ThemeContext","Actions","parentColor","parentField","className","actions","theme","useContext","buttonColorClasses","blue","teal","green","red","pink","purple","orange","yellow","invertedButtonColorClasses","linkButtonColorClasses","map","action","index","element","type","link","color","label","icon","textShadow"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport * as React from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport { ThemeContext } from \"./theme\";\n\nexport const Actions = ({\n  parentColor = \"default\",\n  parentField = \"\",\n  className = \"\",\n  actions,\n}) => {\n  const theme = React.useContext(ThemeContext);\n  const buttonColorClasses = {\n    blue: \"text-white bg-blue-500 hover:bg-blue-600 bg-gradient-to-r from-blue-400 to-blue-600 hover:from-blue-400 hover:to-blue-500\",\n    teal: \"text-white bg-teal-500 hover:bg-teal-600 bg-gradient-to-r from-teal-400 to-teal-600 hover:from-teal-400 hover:to-teal-500\",\n    green:\n      \"text-white bg-green-500 hover:bg-green-600 bg-gradient-to-r from-green-400 to-green-600 hover:from-green-400 hover:to-green-500\",\n    red: \"text-white bg-red-500 hover:bg-red-600 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-400 hover:to-red-500\",\n    pink: \"text-white bg-pink-500 hover:bg-pink-600 bg-gradient-to-r from-pink-400 to-pink-600 hover:from-pink-400 hover:to-pink-500\",\n    purple:\n      \"text-white bg-purple-500 hover:bg-purple-600 bg-gradient-to-r from-purple-400 to-purple-600 hover:from-purple-400 hover:to-purple-500\",\n    orange:\n      \"text-white bg-orange-500 hover:bg-orange-600 bg-gradient-to-r from-orange-400 to-orange-600 hover:from-orange-400 hover:to-orange-500\",\n    yellow:\n      \"text-gray-800 bg-yellow-500 hover:bg-yellow-600 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-400 hover:to-yellow-500\",\n  };\n\n  const invertedButtonColorClasses = {\n    blue: \"text-blue-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    teal: \"text-teal-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    green:\n      \"text-green-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    red: \"text-red-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    pink: \"text-pink-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    purple:\n      \"text-purple-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    orange:\n      \"text-orange-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n    yellow:\n      \"text-yellow-500 bg-white hover:bg-gray-50 bg-gradient-to-r from-gray-50 to-white hover:to-gray-100\",\n  };\n\n  const linkButtonColorClasses = {\n    blue: \"text-blue-600 dark:text-blue-400 hover:text-blue-400 dark:hover:text-blue-200\",\n    teal: \"ttext-teal-600 dark:text-teal-400 hover:text-teal-400 dark:hover:text-teal-200\",\n    green:\n      \"text-green-600 dark:text-green-400 hover:text-green-400 dark:hover:text-green-200\",\n    red: \"text-red-600 dark:text-red-400 hover:text-red-400 dark:hover:text-red-200\",\n    pink: \"text-pink-600 dark:text-pink-400 hover:text-pink-400 dark:hover:text-pink-200\",\n    purple:\n      \"text-purple-600 dark:text-purple-400 hover:text-purple-400 dark:hover:text-purple-200\",\n    orange:\n      \"text-orange-600 dark:text-orange-400 hover:text-orange-400 dark:hover:text-orange-200\",\n    yellow:\n      \"text-yellow-600 dark:text-yellow-400 hover:text-yellow-400 dark:hover:text-yellow-200\",\n  };\n\n  return (\n    <div className={`flex flex-wrap items-center gap-y-4 gap-x-6 ${className}`}>\n      {actions &&\n        actions.map(function (action, index) {\n          let element = null;\n          if (action.type === \"button\") {\n            element = (\n              <Link key={index} href={action.link ? action.link : \"/\"}>\n                <button\n                  data-tinafield={`${parentField}.${index}`}\n                  className={`z-10 relative flex items-center px-7 py-3 font-semibold text-lg transition duration-150 ease-out  rounded transform focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 whitespace-nowrap ${\n                    parentColor === \"primary\"\n                      ? invertedButtonColorClasses[theme.color]\n                      : buttonColorClasses[theme.color]\n                  }`}\n                >\n                  {action.label}\n                  {action.icon && (\n                    <BiRightArrowAlt\n                      className={`ml-1 -mr-1 w-6 h-6 opacity-80`}\n                    />\n                  )}\n                </button>\n              </Link>\n            );\n          }\n          if (action.type === \"link\" || action.type === \"linkExternal\") {\n            element = (\n              <Link key={index} href={action.link ? action.link : \"/\"} passHref>\n                <a\n                  data-tinafield={`${parentField}.${index}`}\n                  className={`group inline-flex items-center font-semibold text-lg transition duration-150 ease-out ${\n                    parentColor === \"primary\"\n                      ? `text-white  hover:text-gray-50`\n                      : linkButtonColorClasses[theme.color]\n                  }`}\n                  style={{\n                    textShadow: `0 3px 7px rgba(var(--color-rgb-blue-400),0.2)`,\n                  }}\n                >\n                  {action.label}\n                  {action.icon && (\n                    <BiRightArrowAlt\n                      className={`ml-0 mr-0 w-6 h-6 opacity-80`}\n                    />\n                  )}\n                </a>\n              </Link>\n            );\n          }\n          return element;\n        })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}