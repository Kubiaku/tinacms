{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles.css\";\nimport dynamic from \"next/dynamic\";\nimport { TinaEditProvider } from \"tinacms/dist/edit-state\";\nimport { Layout } from \"../components/layout\";\nimport { RouteMappingPlugin } from \"tinacms\"; // @ts-ignore FIXME: default export needs to be 'ComponentType<{}>\n\nconst TinaCMS = dynamic(() => import(\"tinacms\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"tinacms\")],\n    modules: [\"tinacms\"]\n  }\n});\nconst NEXT_PUBLIC_TINA_CLIENT_ID = process.env.NEXT_PUBLIC_TINA_CLIENT_ID;\nconst NEXT_PUBLIC_USE_LOCAL_CLIENT = process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT || true;\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  var _pageProps$data, _pageProps$data$getGl;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TinaEditProvider, {\n      showEditButton: true,\n      editMode: /*#__PURE__*/_jsxDEV(TinaCMS, _objectSpread(_objectSpread({\n        branch: \"main\",\n        clientId: NEXT_PUBLIC_TINA_CLIENT_ID,\n        isLocalClient: Boolean(Number(NEXT_PUBLIC_USE_LOCAL_CLIENT)),\n        mediaStore: async () => {\n          const pack = await import(\"next-tinacms-cloudinary\");\n          return pack.TinaCloudCloudinaryMediaStore;\n        },\n        cmsCallback: cms => {\n          import(\"react-tinacms-editor\").then(({\n            MarkdownFieldPlugin\n          }) => {\n            cms.plugins.add(MarkdownFieldPlugin);\n          });\n          /**\n           * Enables `tina-admin` specific features in the Tina Sidebar\n           */\n\n          cms.flags.set(\"tina-admin\", true);\n          /**\n           * An example of a RouteMapping plugin for TinaAdmin\n           */\n\n          const RouteMapping = new RouteMappingPlugin((collection, document) => {\n            if ([\"authors\", \"global\"].includes(collection.name)) {\n              return undefined;\n            }\n\n            if ([\"pages\"].includes(collection.name)) {\n              if (document.sys.filename === \"home\") {\n                return `/`;\n              }\n\n              if (document.sys.filename === \"about\") {\n                return `/about`;\n              }\n\n              return undefined;\n            }\n\n            return `/${collection.name}/${document.sys.filename}`;\n          });\n          cms.plugins.add(RouteMapping);\n        },\n        documentCreatorCallback: {\n          /**\n           * After a new document is created, redirect to its location\n           */\n          onNewDocument: ({\n            collection: {\n              slug\n            },\n            breadcrumbs\n          }) => {\n            const relativeUrl = `/${slug}/${breadcrumbs.join(\"/\")}`;\n            return window.location.href = relativeUrl;\n          },\n\n          /**\n           * Only allows documents to be created to the `Blog Posts` Collection\n           */\n          filterCollections: options => {\n            return options.filter(option => option.label === \"Blog Posts\");\n          }\n        },\n        formifyCallback: ({\n          formConfig,\n          createForm,\n          createGlobalForm\n        }) => {\n          if (formConfig.id === \"getGlobalDocument\") {\n            return createGlobalForm(formConfig);\n          }\n\n          return createForm(formConfig);\n        }\n      }, pageProps), {}, {\n        children: livePageProps => {\n          var _livePageProps$data, _livePageProps$data$g;\n\n          return /*#__PURE__*/_jsxDEV(Layout, {\n            rawData: livePageProps,\n            data: (_livePageProps$data = livePageProps.data) === null || _livePageProps$data === void 0 ? void 0 : (_livePageProps$data$g = _livePageProps$data.getGlobalDocument) === null || _livePageProps$data$g === void 0 ? void 0 : _livePageProps$data$g.data,\n            children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, livePageProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        rawData: pageProps,\n        data: (_pageProps$data = pageProps.data) === null || _pageProps$data === void 0 ? void 0 : (_pageProps$data$getGl = _pageProps$data.getGlobalDocument) === null || _pageProps$data$getGl === void 0 ? void 0 : _pageProps$data$getGl.data,\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/pages/_app.tsx"],"names":["dynamic","TinaEditProvider","Layout","RouteMappingPlugin","TinaCMS","ssr","NEXT_PUBLIC_TINA_CLIENT_ID","process","env","NEXT_PUBLIC_USE_LOCAL_CLIENT","App","Component","pageProps","Boolean","Number","pack","TinaCloudCloudinaryMediaStore","cms","then","MarkdownFieldPlugin","plugins","add","flags","set","RouteMapping","collection","document","includes","name","undefined","sys","filename","onNewDocument","slug","breadcrumbs","relativeUrl","join","window","location","href","filterCollections","options","filter","option","label","formConfig","createForm","createGlobalForm","id","livePageProps","data","getGlobalDocument"],"mappings":"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","sourcesContent":["import \"../styles.css\";\nimport dynamic from \"next/dynamic\";\nimport { TinaEditProvider } from \"tinacms/dist/edit-state\";\nimport { Layout } from \"../components/layout\";\nimport { RouteMappingPlugin } from \"tinacms\";\n// @ts-ignore FIXME: default export needs to be 'ComponentType<{}>\nconst TinaCMS = dynamic(() => import(\"tinacms\"), { ssr: false });\n\nconst NEXT_PUBLIC_TINA_CLIENT_ID = process.env.NEXT_PUBLIC_TINA_CLIENT_ID;\nconst NEXT_PUBLIC_USE_LOCAL_CLIENT =\n  process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT || true;\n\nconst App = ({ Component, pageProps }) => {\n  return (\n    <>\n      <TinaEditProvider\n        showEditButton={true}\n        editMode={\n          <TinaCMS\n            branch=\"main\"\n            clientId={NEXT_PUBLIC_TINA_CLIENT_ID}\n            isLocalClient={Boolean(Number(NEXT_PUBLIC_USE_LOCAL_CLIENT))}\n            mediaStore={async () => {\n              const pack = await import(\"next-tinacms-cloudinary\");\n              return pack.TinaCloudCloudinaryMediaStore;\n            }}\n            cmsCallback={(cms) => {\n              import(\"react-tinacms-editor\").then(({ MarkdownFieldPlugin }) => {\n                cms.plugins.add(MarkdownFieldPlugin);\n              });\n\n              /**\n               * Enables `tina-admin` specific features in the Tina Sidebar\n               */\n              cms.flags.set(\"tina-admin\", true);\n\n              /**\n               * An example of a RouteMapping plugin for TinaAdmin\n               */\n              const RouteMapping = new RouteMappingPlugin(\n                (collection, document) => {\n                  if ([\"authors\", \"global\"].includes(collection.name)) {\n                    return undefined;\n                  }\n                  if ([\"pages\"].includes(collection.name)) {\n                    if (document.sys.filename === \"home\") {\n                      return `/`;\n                    }\n                    if (document.sys.filename === \"about\") {\n                      return `/about`;\n                    }\n                    return undefined;\n                  }\n                  return `/${collection.name}/${document.sys.filename}`;\n                }\n              );\n              cms.plugins.add(RouteMapping);\n            }}\n            documentCreatorCallback={{\n              /**\n               * After a new document is created, redirect to its location\n               */\n              onNewDocument: ({ collection: { slug }, breadcrumbs }) => {\n                const relativeUrl = `/${slug}/${breadcrumbs.join(\"/\")}`;\n                return (window.location.href = relativeUrl);\n              },\n              /**\n               * Only allows documents to be created to the `Blog Posts` Collection\n               */\n              filterCollections: (options) => {\n                return options.filter(\n                  (option) => option.label === \"Blog Posts\"\n                );\n              },\n            }}\n            formifyCallback={({ formConfig, createForm, createGlobalForm }) => {\n              if (formConfig.id === \"getGlobalDocument\") {\n                return createGlobalForm(formConfig);\n              }\n\n              return createForm(formConfig);\n            }}\n            {...pageProps}\n          >\n            {(livePageProps) => (\n              <Layout\n                rawData={livePageProps}\n                data={livePageProps.data?.getGlobalDocument?.data}\n              >\n                <Component {...livePageProps} />\n              </Layout>\n            )}\n          </TinaCMS>\n        }\n      >\n        <Layout\n          rawData={pageProps}\n          data={pageProps.data?.getGlobalDocument?.data}\n        >\n          <Component {...pageProps} />\n        </Layout>\n      </TinaEditProvider>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}