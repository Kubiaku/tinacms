{"ast":null,"code":"var _jsxFileName = \"/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/components/tina-wrapper.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\nCopyright 2021 Forestry.io Holdings, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { TinaCloudProvider } from 'tinacms';\nimport React from 'react';\nimport { useGraphqlForms } from 'tinacms';\nimport { LoadingPage } from './Spinner';\n/**\n * This gets loaded dynamically in \"pages/_app.js\"\n * if you're on a route that starts with \"/admin\"\n */\n\nconst TinaWrapper = props => {\n  return __jsx(TinaCloudProvider // clientId={process.env.NEXT_PUBLIC_TINA_CLIENT_ID}\n  // branch=\"main\"\n  // isLocalClient={Boolean(Number(process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT))}\n  // organization={process.env.NEXT_PUBLIC_ORGANIZATION_NAME}\n  , {\n    clientId: \"\",\n    branch: \"main\",\n    isLocalClient: true,\n    organization: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Inner, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst Inner = props => {\n  const [payload, isLoading] = useGraphqlForms({\n    query: gql => gql(props.query),\n    variables: props.variables || {}\n  });\n  return __jsx(React.Fragment, null, isLoading ? __jsx(LoadingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, props.children(props)) : // pass the new edit state data to the child\n  props.children(_objectSpread(_objectSpread({}, props), {}, {\n    data: payload\n  })));\n};\n\nexport default TinaWrapper;","map":{"version":3,"sources":["/Users/jeffsee/code/tinacms/examples/tina-cloud-starter/components/tina-wrapper.tsx"],"names":["TinaCloudProvider","React","useGraphqlForms","LoadingPage","TinaWrapper","props","Inner","payload","isLoading","query","gql","variables","children","data"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,QAAkC,SAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,SACE,MAAC,iBAAD,CACE;AACA;AACA;AACA;AAJF;AAKE,IAAA,QAAQ,EAAC,EALX;AAME,IAAA,MAAM,EAAC,MANT;AAOE,IAAA,aAAa,EAAE,IAPjB;AAQE,IAAA,YAAY,EAAC,EARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD,eAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,CADF;AAcD,CAfD;;AAiBA,MAAMC,KAAK,GAAGD,KAAK,IAAI;AACrB,QAAM,CAACE,OAAD,EAAUC,SAAV,IAAuBN,eAAe,CAAC;AAC3CO,IAAAA,KAAK,EAAEC,GAAG,IAAIA,GAAG,CAACL,KAAK,CAACI,KAAP,CAD0B;AAE3CE,IAAAA,SAAS,EAAEN,KAAK,CAACM,SAAN,IAAmB;AAFa,GAAD,CAA5C;AAIA,SACE,4BACGH,SAAS,GACR,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcH,KAAK,CAACO,QAAN,CAAeP,KAAf,CAAd,CADQ,GAGR;AACAA,EAAAA,KAAK,CAACO,QAAN,iCAAoBP,KAApB;AAA2BQ,IAAAA,IAAI,EAAEN;AAAjC,KALJ,CADF;AAUD,CAfD;;AAiBA,eAAeH,WAAf","sourcesContent":["/**\nCopyright 2021 Forestry.io Holdings, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { TinaCloudProvider } from 'tinacms'\nimport React from 'react'\nimport { useGraphqlForms } from 'tinacms'\nimport { LoadingPage } from './Spinner'\n\n/**\n * This gets loaded dynamically in \"pages/_app.js\"\n * if you're on a route that starts with \"/admin\"\n */\nconst TinaWrapper = props => {\n  return (\n    <TinaCloudProvider\n      // clientId={process.env.NEXT_PUBLIC_TINA_CLIENT_ID}\n      // branch=\"main\"\n      // isLocalClient={Boolean(Number(process.env.NEXT_PUBLIC_USE_LOCAL_CLIENT))}\n      // organization={process.env.NEXT_PUBLIC_ORGANIZATION_NAME}\n      clientId=\"\"\n      branch=\"main\"\n      isLocalClient={true}\n      organization=\"\"\n    >\n      <Inner {...props} />\n    </TinaCloudProvider>\n  )\n}\n\nconst Inner = props => {\n  const [payload, isLoading] = useGraphqlForms({\n    query: gql => gql(props.query),\n    variables: props.variables || {},\n  })\n  return (\n    <>\n      {isLoading ? (\n        <LoadingPage>{props.children(props)}</LoadingPage>\n      ) : (\n        // pass the new edit state data to the child\n        props.children({ ...props, data: payload })\n      )}\n    </>\n  )\n}\n\nexport default TinaWrapper\n"]},"metadata":{},"sourceType":"module"}